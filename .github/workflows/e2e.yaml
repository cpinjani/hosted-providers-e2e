# This workflow is a reusable one called by other workflows
name: E2E workflow

on:
  workflow_dispatch:
  # Variables to set when calling this reusable workflow
    inputs:
      rancher_version:
        description: Rancher version to deploy
        required: true
        default: '2.8-head'
        type: string
      run_provisioning_tests:
        required: true
        default: true
        type: boolean
      run_importing_tests:
        required: true
        default: true
        type: boolean
      run_support_matrix_tests:
        required: true
        default: true
        type: boolean
      keep_cluster:
        type: boolean
        description: "Keep the cluster afterwards?"
        required: true
        default: false

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  EKS_REGION: ${{ secrets.EKS_REGION }}
  GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
  AKS_CLIENT_ID: ${{ secrets.AKS_CLIENT_ID }}
  AKS_CLIENT_SECRET: ${{ secrets.AKS_CLIENT_SECRET }}
  AKS_SUBSCRIPTION_ID: ${{ secrets.AKS_SUBSCRIPTION_ID }}
  AKS_TENANT_ID: ${{ secrets.AKS_TENANT_ID }}
  GKE_PROJECT_ID: ${{ secrets.GKE_PROJECT_ID }}
  RANCHER_PASSWORD: rancherpassword

jobs:
  installation:
    runs-on: self-hosted
    # TODO
    # needs: [create-runner]
    outputs:
      PUBLIC_IP: ${{ steps.runner-ip.outputs.PUBLIC_IP }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get Runner IP
        id: runner-ip
        run: echo "PUBLIC_IP=$(curl -s ifconfig.co)" >> "$GITHUB_OUTPUT"

      - name: Install K3s / Helm / Rancher
        env:
          KUBECONFIG: /etc/rancher/k3s/k3s.yaml
          HELM_VERSION: 3.13.1
          K3S_VERSION: v1.26.10+k3s1
          RANCHER_VERSION: ${{ inputs.rancher_version }}
          RANCHER_HOSTNAME: ${{steps.runner-ip.outputs.PUBLIC_IP}}.sslip.io
        run: |
          make prepare-e2e-ci-rancher

      - name: Install Azure cli
        run: |
          sudo zypper install -y azure-cli
          pip install azure-cli

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ env.AKS_CLIENT_ID }}","clientSecret":"${{ env.AKS_CLIENT_SECRET }}","subscriptionId":"${{ env.AKS_SUBSCRIPTION_ID }}","tenantId":"${{ env.AKS_TENANT_ID }}"}'

      - name: Authenticate to GCP
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ env.GCP_CREDENTIALS }}'
  
      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v1
        
      - name: Install gcloud kubectl version
        run: gcloud components install kubectl

      - name: Install EKSCTL
        run: |
          # Better to always use the latest eksctl binary to avoid API version issue
          EKSCTL_GH=https://github.com/weaveworks/eksctl/releases/latest/download
          curl --location ${EKSCTL_GH}/eksctl_$(uname -s)_amd64.tar.gz | tar xz -C .
          chmod +x eksctl
          sudo mv eksctl /usr/local/bin

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4.0.0
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.EKS_REGION }}

  provisioning-tests:
    if: ${{ always() && github.event.inputs.run_provisioning_tests == 'true' }}
    needs: [installation]
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod

      - name: Provisioning cluster tests
        env:
          RANCHER_HOSTNAME: ${{ needs.installation.outputs.PUBLIC_IP}}.sslip.io
          CATTLE_TEST_CONFIG: ${{ github.workspace }}/cattle-config-prov.yaml
        run: |
          make e2e-provisioning-tests

  importing-tests:
    if: ${{ always() && github.event.inputs.run_importing_tests == 'true' }}
    needs: [installation]
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod

      - name: Importing cluster tests
        env:
          RANCHER_HOSTNAME: ${{ needs.installation.outputs.PUBLIC_IP}}.sslip.io
          CATTLE_TEST_CONFIG: ${{ github.workspace }}/cattle-config-imp.yaml
        run: |
          make e2e-import-tests

  support-matrix-tests:
    if: ${{ always() && github.event.inputs.run_support_matrix_tests == 'true' }}
    needs: [installation]
    runs-on: self-hosted      
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod

      - name: Support matrix tests
        env:
          RANCHER_HOSTNAME: ${{ needs.installation.outputs.PUBLIC_IP}}.sslip.io
          CATTLE_TEST_CONFIG: ${{ github.workspace }}/cattle-config-prov.yaml
        run: |
          make e2e-support-matrix-tests

  delete-cluster:
    if: ${{ always() && github.event.inputs.keep_cluster != 'true' }}
    needs: [installation, provisioning-tests, importing-tests, support-matrix-tests]
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Delete k3s cluster
        run: |
          make clean-all
